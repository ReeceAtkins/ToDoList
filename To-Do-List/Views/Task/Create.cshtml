@model To_Do_List.Models.TaskCreateViewModel

@{
    ViewData["Title"] = "Create";

    List<SelectListItem> profilesSelectList = new();
    foreach (Profile profile in Model.AllProfiles)
    {
        profilesSelectList.Add
        (
            new SelectListItem()
                    {
                        Value = profile.ProfileId.ToString(),
                        Text = profile.Name
                    }
        );
    };
}

<h1>Create</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            @if (Model.AllProfiles?.Count > 1) {
                <div class="form-group">
                    <select asp-for="ChosenProfile" asp-items="profilesSelectList"></select>
                </div>
            }
            else
            {
                <select asp-for="ChosenProfile" asp-items="profilesSelectList" hidden></select>
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-success" />
                <a asp-controller="Profile" asp-action="Index" class="btn btn-primary float">Back to Profiles</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
